name: Build Dependencies

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths:
      - 'vcpkg.json'
      - '.github/workflows/build-dependencies.yml'

jobs:
  build-dependencies:
    strategy:
      matrix:
        include:
          # Windows
          - os: windows-latest
            triplet: x64-windows-static
            platform: windows
            arch: x64
            
          # macOS
          - os: macos-latest
            triplet: x64-osx
            platform: macosx
            arch: x64
            
          - os: macos-latest
            triplet: arm64-osx
            platform: macarm64
            arch: arm64
            
          # Linux
          - os: ubuntu-latest
            triplet: x64-linux
            platform: linux
            arch: x64

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup vcpkg
      uses: microsoft/setup-msbuild@v2
      if: matrix.os == 'windows-latest'

    - name: Install build tools (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build pkg-config \
          libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev \
          libgl1-mesa-dev libglu1-mesa-dev libasound2-dev libpulse-dev \
          libudev-dev libdbus-1-dev

    - name: Install build tools (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake ninja pkg-config

    - name: Setup vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          ./bootstrap-vcpkg.bat
        else
          ./bootstrap-vcpkg.sh
        fi
      shell: bash

    - name: Build dependencies (without Qt)
      run: |
        cd vcpkg
        # Create a temporary vcpkg.json without qtbase
        cat > vcpkg-no-qt.json << 'EOF'
        {
          "name": "lupine-engine-deps",
          "version": "1.0.0",
          "dependencies": [
            "assimp",
            "box2d",
            "bullet3",
            "fmt",
            "glad",
            "glm",
            "libflac",
            "libjpeg-turbo",
            "libogg",
            "libpng",
            "libvorbis",
            "lua",
            "lz4",
            "nlohmann-json",
            "opus",
            "pugixml",
            "pybind11",
            "python3",
            "sdl2",
            "sdl2-image",
            "sdl2-mixer",
            "sdl2-ttf",
            "spdlog",
            "yaml-cpp",
            "zlib",
            "zstd"
          ]
        }
        EOF
        
        ./vcpkg install --triplet=${{ matrix.triplet }} --manifest-root=. --x-manifest-root=vcpkg-no-qt.json
      shell: bash

    - name: Package dependencies (without Qt)
      run: |
        cd vcpkg
        tar -czf ../lupine-deps-no-qt-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz installed/${{ matrix.triplet }}
      shell: bash

    - name: Build dependencies (with Qt)
      run: |
        cd vcpkg
        # Use the original vcpkg.json with qtbase
        cp ../vcpkg.json .
        ./vcpkg install --triplet=${{ matrix.triplet }} --manifest-root=.
      shell: bash

    - name: Package dependencies (with Qt)
      run: |
        cd vcpkg
        tar -czf ../lupine-deps-with-qt-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz installed/${{ matrix.triplet }}
      shell: bash

    - name: Upload dependencies (without Qt)
      uses: actions/upload-artifact@v4
      with:
        name: lupine-deps-no-qt-${{ matrix.platform }}-${{ matrix.arch }}
        path: lupine-deps-no-qt-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
        retention-days: 30

    - name: Upload dependencies (with Qt)
      uses: actions/upload-artifact@v4
      with:
        name: lupine-deps-with-qt-${{ matrix.platform }}-${{ matrix.arch }}
        path: lupine-deps-with-qt-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
        retention-days: 30

  create-combined-archives:
    needs: build-dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create combined archives
      run: |
        # Create combined archive without Qt
        mkdir -p combined-no-qt
        cd artifacts
        for dir in lupine-deps-no-qt-*; do
          if [ -d "$dir" ]; then
            cp "$dir"/*.tar.gz ../combined-no-qt/
          fi
        done
        cd ../combined-no-qt
        tar -czf ../lupine-deps-no-qt-all-platforms.tar.gz *.tar.gz
        cd ..
        
        # Create combined archive with Qt
        mkdir -p combined-with-qt
        cd artifacts
        for dir in lupine-deps-with-qt-*; do
          if [ -d "$dir" ]; then
            cp "$dir"/*.tar.gz ../combined-with-qt/
          fi
        done
        cd ../combined-with-qt
        tar -czf ../lupine-deps-with-qt-all-platforms.tar.gz *.tar.gz

    - name: Upload combined archive (without Qt)
      uses: actions/upload-artifact@v4
      with:
        name: lupine-deps-no-qt-all-platforms
        path: lupine-deps-no-qt-all-platforms.tar.gz
        retention-days: 90

    - name: Upload combined archive (with Qt)
      uses: actions/upload-artifact@v4
      with:
        name: lupine-deps-with-qt-all-platforms
        path: lupine-deps-with-qt-all-platforms.tar.gz
        retention-days: 90
